{"version":3,"sources":["../src/index.js"],"names":["transformReactFelaDisplayName","t","types","functionNameRegEx","reactFelaPackageRegEx","handleInjectDisplayName","initialLineNodePath","componentName","objectName","leftLeft","memberExpression","identifier","left","right","stringLiteral","displayNameAssignment","toStatement","assignmentExpression","insertAfter","identifierComesFromReactFela","identifierDeclarationPath","calleeName","bindings","scope","sourcePath","path","isImportSpecifier","parentPath","isImportDeclaration","sourceImportFrom","parent","source","value","importedName","node","imported","name","isFromReactFela","test","validImportedName","isVariableDeclarator","init","isMemberExpression","property","callee","object","visitor","AssignmentExpression","opts","isCallExpression","injectAssignmentDisplayName","propertyName","variableName","globalSource","binding","importDeclaration","VariableDeclarator","id","injectDisplayName","match","bindingNode","isVariableDeclaration","bindingInit","isRequiredFromReact","arguments","some","arg","functionBinding","isIdentifier","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["const transformReactFelaDisplayName = ({ types: t }) => {\n  const functionNameRegEx = /^createComponent(WithProxy)?$/;\n  const reactFelaPackageRegEx = /react-fela(\\/.*(\\.js)?)?$/;\n\n  const handleInjectDisplayName = (initialLineNodePath, componentName, objectName) => {\n    if (!initialLineNodePath || !componentName) return;\n    const leftLeft = objectName\n      ? t.memberExpression(t.identifier(objectName), t.identifier(componentName))\n      : t.identifier(componentName);\n    const left = t.memberExpression(leftLeft, t.identifier('displayName'));\n    const right = t.stringLiteral(componentName);\n    const displayNameAssignment = t.toStatement(t.assignmentExpression('=', left, right));\n    initialLineNodePath.insertAfter(displayNameAssignment);\n  };\n\n  const identifierComesFromReactFela = (identifierDeclarationPath, calleeName) => {\n    const { scope: { bindings } } = identifierDeclarationPath;\n    if (!bindings[calleeName]) return false;\n    const sourcePath = bindings[calleeName].path;\n\n    if (sourcePath.isImportSpecifier() && sourcePath.parentPath.isImportDeclaration()) {\n      // Handle cases where the function is imported destructured. For example:\n      //\n      // import { createComponent } from 'react-fela';\n      // /* or */\n      // import { createComponentWithProxy }j from 'react-fela';\n      //\n      const {\n        parent: { source: { value: sourceImportFrom } },\n        node: { imported: { name: importedName } }\n      } = sourcePath;\n      const isFromReactFela = reactFelaPackageRegEx.test(sourceImportFrom);\n      const validImportedName = functionNameRegEx.test(importedName);\n      return isFromReactFela && validImportedName;\n    } else if (sourcePath.isVariableDeclarator()) {\n      const { node: { init } } = sourcePath;\n      // This handles the following case:\n      //\n      // const createComponent = require('react-fela').createComponent;\n      //\n      if (t.isMemberExpression(init)) {\n        const { property, object: { callee } } = init;\n        return callee.name === 'require' && functionNameRegEx.test(property.name);\n      }\n    }\n\n    return false;\n  };\n\n  return {\n    name: 'transform-react-fela-display-name',\n    visitor: {\n      AssignmentExpression(path, { opts }) {\n        // This adds the ability to handle components created and assigned to objects of properties.\n        // This handles the case of a component being created as a class property. For example:\n        //\n        // class MyParentComponent extends React.Component {\n        //   static MyChildComponent = createComponent(() => ({}), 'div');\n        //   ...\n        // }\n        //\n        const { node: { left, right } } = path;\n        if (t.isMemberExpression(left) && t.isCallExpression(right)) {\n          const injectAssignmentDisplayName = () => {\n            const { object: { name: objectName }, property: { name: propertyName } } = left;\n            return handleInjectDisplayName(path.parentPath, propertyName, objectName);\n          };\n          const { callee } = right;\n          if (t.isMemberExpression(callee)) {\n            // This handles the case where the assignment is to a default import of the package.\n            // For example:\n            //\n            // import ReactFela from 'react-fela';\n            // class MyParentComponent extends React.Component {\n            //   static MyChildComponent = ReactFela.createComponent(() => ({}), 'div');\n            // }\n            //\n            const { object: { name: variableName } } = callee;\n            const { scope: { bindings } } = path;\n            if (variableName && variableName === opts.globalSource) {\n              injectAssignmentDisplayName();\n              return;\n            }\n            const binding = bindings[variableName];\n            if (!binding || !binding.path || !binding.path.parent) return;\n\n            const { path: { parent: importDeclaration } } = binding;\n\n            if (t.isImportDeclaration(importDeclaration)) {\n              injectAssignmentDisplayName();\n            }\n          } else if (identifierComesFromReactFela(path, callee.name)) {\n            injectAssignmentDisplayName();\n          }\n        }\n      },\n      VariableDeclarator(path, { opts }) {\n        // Match cases such as:\n        //\n        // const x = y;\n        //\n        const { node: { id, init } } = path;\n\n        if (!init) return;\n\n        const { callee } = init;\n\n        if (t.isCallExpression(init)) {\n          // Match cases such as:\n          //\n          // const x = y();\n          //\n          const componentName = id.name;\n          const initialLineNodePath = path.parentPath;\n\n          const injectDisplayName = () =>\n            handleInjectDisplayName(initialLineNodePath, componentName);\n\n          if (\n            callee.name &&\n            callee.name.match(functionNameRegEx) &&\n            identifierComesFromReactFela(path, callee.name)\n          ) {\n            // Match cases such as:\n            //\n            // const x = createComponent(...);\n            // /* or */\n            // const y = createComponentWithProxy(...);\n            //\n            injectDisplayName();\n          } else if (t.isMemberExpression(callee)) {\n            // This handles default imports of createComponent functions. For example:\n            //\n            // import ReactFela from 'react-fela';\n            // const renameIt = createComponent;\n            // const MyComponent = renameIt(...);\n            //\n            const { object: { name: variableName } } = callee;\n            if (variableName && variableName === opts.globalSource) {\n              // This handles the case where the recipient matches the provided global source name.\n              // For example:\n              // /* babel plugin options = { globalSource: 'ReactFela' } */\n              // const MyComponent = ReactFela.createComponent(...);\n              //\n              injectDisplayName();\n              return;\n            }\n            const { scope: { bindings } } = path;\n            if (!bindings[variableName]) return;\n            const { path: { parent, node: bindingNode } } = bindings[variableName];\n            if (t.isImportDeclaration(parent)) {\n              const { path: { parent: { source: { value } } } } = bindings[variableName];\n\n              if (reactFelaPackageRegEx.test(value)) {\n                injectDisplayName();\n              }\n            } else if (t.isVariableDeclaration(parent)) {\n              // This handles the following case:\n              //\n              // const ReactFela = require('react-fela');\n              // const MyComponent = ReactFela.createComponent(...);\n              //\n              const { init: bindingInit } = bindingNode;\n              if (t.isVariableDeclarator(bindingNode) && t.isCallExpression(bindingInit)) {\n                const isRequiredFromReact = bindingInit.arguments.some(arg =>\n                  reactFelaPackageRegEx.test(arg.value)\n                );\n                if (isRequiredFromReact) {\n                  injectDisplayName();\n                }\n              }\n            }\n          } else {\n            const { scope: { bindings } } = path;\n            const functionBinding = bindings[callee.name];\n            if (!functionBinding) return;\n            const { path: { node: { init: bindingInit } } } = functionBinding;\n\n            if (\n              t.isIdentifier(bindingInit) &&\n              identifierComesFromReactFela(functionBinding.path, bindingInit.name)\n            ) {\n              // This handles renaming of the createComponent functions. For example:\n              //\n              // import { createComponent } from 'react-fela';\n              // const renameIt = createComponent;\n              // const MyComponent = renameIt(...);\n              //\n              injectDisplayName();\n            }\n          }\n        }\n      }\n    }\n  };\n};\n\nmodule.exports = transformReactFelaDisplayName;\n"]}